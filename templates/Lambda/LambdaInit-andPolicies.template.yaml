AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Create Lambda function with dummy content, create Managed Policies for
  CI to update and deploy the Lambda function.
Parameters:
  LambdaFunctionName:
    Description: Name of the Lambda function to be created or updated.
    Type: String
    Default: LambdaFunction

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${LambdaFunctionName}'
      RetentionInDays: 7  # days

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Description: TODO
      Runtime: python3.7
      Handler: !Sub ${LambdaFunctionName}.lambda_handler
      Code:
        ZipFile: |
          def lambda_handler(event, context):
              # This function will be updated through CI/CD
              return "Hello from Lambda!"
      MemorySize: 1024
      Timeout: 30
      Role: !GetAtt LambdaExecutionRole.Arn
      TracingConfig:
        Mode: Active
      Tags:
        - Key: Billing
          Value: TodoService

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${LambdaFunctionName}-ExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub ${LambdaFunctionName}-Logging
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  LambdaManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Managed Policy for creating/updating the specified lambda function
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - lambda:GetFunction
              - lambda:CreateFunction
              - lambda:UpdateFunctionCode
              - lambda:UpdateFunctionConfiguration
              - lambda:CreateAlias
              - lambda:DeleteAlias
              - lambda:GetAlias
              - lambda:UpdateAlias
              - lambda:PublishVersion
              - lambda:InvokeFunction
            Resource:
              - !GetAtt LambdaFunction.Arn
          - Effect: Allow
            Action:
              - iam:Passrole
            Resource: !GetAtt LambdaExecutionRole.Arn

Outputs:
  LambdaFunctionName:
    Description: Lambda function name
    Value: !Ref LambdaFunction
  LambdaFunctionArn:
    Description: The ARN of the Lambda function
    Value: !GetAtt LambdaFunction.Arn
