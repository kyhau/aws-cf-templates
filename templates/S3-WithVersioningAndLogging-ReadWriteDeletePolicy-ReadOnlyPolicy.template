{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Create S3 bucket with logging enabled (also optionally enable versioning, create managed policies for Read-Only and Read-Write-Delete accesses).",

  "Parameters": {
    "BucketName": {
      "Description": "The name of the S3 bucket to be created.",
      "Type": "String"
    },
    "EnableLogging": {
      "Description": "Enable logging.",
      "Type": "String",
      "AllowedValues": ["Enabled", "Suspended"],
      "Default": "Suspended"
    },
    "EnableVersioning": {
      "Description": "Enable versioning (Enabled or Suspended).",
      "Type": "String",
      "AllowedValues": ["Enabled", "Suspended"],
      "Default": "Suspended"
    },
    "ServerSideEncryptionAlgorithm": {
      "Description": "Specify server side encryption. Choose None to disable server side encryption.",
      "Type": "String",
      "AllowedValues": ["None", "AES256", "aws:kms"],
      "Default": "None"
    },
    "KMSMasterKeyID": {
      "Description": "KMS Master Key ID. Required only if selecting aws:kms in ServerSideEncryptionAlgorithm.",
      "Type": "String"
    },
    "ReadOnlyGroupName": {
      "Description": "Optional. Name of the Group to be created and given Read-only access to the given bucket.",
      "Type": "String",
      "Default": ""
    },
    "ReadWriteDeleteGroupName": {
      "Description": "Optional. Name of the Group to be created and given Read-Write-Delete access to the given bucket.",
      "Type": "String",
      "Default": ""
    }
  },

  "Conditions": {
    "SSEEnabled": {"Fn::Not": [{"Fn::Equals": ["None", {"Ref": "ServerSideEncryptionAlgorithm"}]}]},
    "UseKms": {"Fn::Equals": ["aws:kms", {"Ref": "ServerSideEncryptionAlgorithm"}]},
    "LoggingEnabled": {"Fn::Equals": ["Enabled", {"Ref": "EnableLogging"}]},
    "VersioningEnabled": {"Fn::Equals": ["Enabled", {"Ref": "EnableVersioning"}]},
    "ReadOnlyGroupNameSpecified": {"Fn::Not": [{"Fn::Equals": ["", {"Ref": "ReadOnlyGroupName"}]}]},
    "ReadWriteDeleteGroupNameSpecified": {"Fn::Not": [{"Fn::Equals": ["", {"Ref": "ReadWriteDeleteGroupName"}]}]}
  },

  "Resources": {
    "S3BucketLogs": {
      "Type": "AWS::S3::Bucket",
      "Condition": "LoggingEnabled",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketName": {"Fn::Join": ["-", [{"Ref": "BucketName"}, "logs"]]},
        "VersioningConfiguration": {"Status": "Suspended"}
      }
    },

    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {"Ref":"BucketName"},
        "AccessControl": "BucketOwnerFullControl",
        "BucketEncryption": {
          "Fn::If" : [
            "SSEEnabled",
            {
              "ServerSideEncryptionConfiguration": [{
                "ServerSideEncryptionByDefault": {
                    "Fn::If" : [
                      "UseKms",
                      {
                        "SSEAlgorithm": {"Ref": "ServerSideEncryptionAlgorithm"},
                        "KMSMasterKeyID": {"Ref": "KMSMasterKeyID"}
                      },
                      {
                        "SSEAlgorithm": {"Ref": "ServerSideEncryptionAlgorithm"}
                      }
                    ]
                  }
              }]
            },
            {"Ref": "AWS::NoValue"}
          ]
        },
        "LoggingConfiguration": {
          "Fn::If" : [
            "LoggingEnabled",
            {"DestinationBucketName": {"Ref": "S3BucketLogs"}},
            {"Ref": "AWS::NoValue"}
          ]
        },
        "VersioningConfiguration": {"Status": {"Ref": "EnableVersioning"}}
      },
      "DeletionPolicy": "Retain"
    },

    "IamGroupReadWriteDelete": {
      "Type": "AWS::IAM::Group",
      "Condition": "ReadWriteDeleteGroupNameSpecified",
      "Properties": {
        "GroupName": {"Ref": "ReadWriteDeleteGroupName"}
      }
    },
    "ManagedPolicyS3ReadWriteDelete": {
      "Type": "AWS::IAM::ManagedPolicy",
      "DependsOn": ["S3Bucket"],
      "Properties": {
        "Description": "Managed Policy for accessing S3 bucket (read/write/delete)",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["s3:ListAllMyBuckets" ],
              "Resource": "arn:aws:s3:::*"},
            {
              "Effect": "Allow",
              "Action": ["s3:ListBucket", "s3:GetBucketLocation" ],
              "Resource": {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "BucketName"}]]}
            },
            {
              "Effect": "Allow",
              "Action": ["s3:PutObject*", "s3:GetObject", "s3:DeleteObject" ],
              "Resource": {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "BucketName"}, "/*"]]}
            }
          ]
        },
        "Groups": [{
          "Fn::If" : [
            "ReadWriteDeleteGroupNameSpecified",
            {"Ref": "ReadWriteDeleteGroupName"},
            {"Ref": "AWS::NoValue"}
          ]
        }]
      }
    },

    "IamGroupReadOnly": {
      "Type": "AWS::IAM::Group",
      "Condition": "ReadOnlyGroupNameSpecified",
      "Properties": {
        "GroupName": {"Ref": "ReadOnlyGroupName"}
      }
    },
    "ManagedPolicyS3Read": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Condition": "ReadOnlyGroupNameSpecified",
      "DependsOn": ["S3Bucket", "IamGroupReadOnly"],
      "Properties": {
        "Description": "Managed Policy for accessing S3 bucket (read only)",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["s3:ListAllMyBuckets"],
              "Resource": "arn:aws:s3:::*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket",
                "s3:GetBucketLocation"
              ],
              "Resource": {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "BucketName"}]]}
            },
            {
              "Effect": "Allow",
              "Action": ["s3:GetObject"],
              "Resource": {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "BucketName"}, "/*"]]}
            }
          ]
        },
        "Groups": [{
          "Fn::If" : [
            "ReadOnlyGroupNameSpecified",
            {"Ref": "ReadOnlyGroupName"},
            {"Ref": "AWS::NoValue"}
          ]
        }]
      }
    }
  }
}
